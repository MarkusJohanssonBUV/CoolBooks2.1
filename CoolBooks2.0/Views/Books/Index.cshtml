@using Microsoft.AspNetCore.Identity;
@using CoolBooks.Areas.Identity;
@model IEnumerable<CoolBooks.Models.BooksViewModel>
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager



<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Books";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body class = "main-container">


@if (SignInManager.IsSignedIn(User))
{
    <p>
    <a class="btn btn-secondary" asp-action="Create">Create New Book</a>
</p>
}
@*table table-dark  table-borderless  align-top *@
<table class="main-container opacity-tabel table-defult table-striped table-borderless  align-top ">
    <thead>
        <tr>

           
            <th >
                 @if (ViewBag.TitleSortParm == "Title_desc")
                 {
                        @Html.ActionLink("▲", "Index", new { sortOrder = ViewBag.TitleSortParm, currentFilter=ViewBag.CurrentFilter}, new{@class = "actionLink"})<br />
                    }
                    else
                    {
                        @Html.ActionLink("▼", "Index", new { sortOrder = ViewBag.TitleSortParm, currentFilter=ViewBag.CurrentFilter }, new{@class = "actionLink"})<br />
                    }
                    

                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>

                @Html.DisplayNameFor(model => model.Description)
            </th>
            
            <th>
                Image
                @Html.DisplayNameFor(model => model.ImagePath)
            </th>
            
            <th>
                   @if (ViewBag.AuthorSortParm == "Author_desc")
                 {
                        @Html.ActionLink("▲", "Index", new { sortOrder = ViewBag.AuthorSortParm, currentFilter=ViewBag.CurrentFilter}, new{@class = "actionLink"})<br />
                    }
                    else
                    {
                        @Html.ActionLink("▼", "Index", new { sortOrder = ViewBag.AuthorSortParm, currentFilter=ViewBag.CurrentFilter }, new{@class = "actionLink"})<br />
                    }
                
                @Html.DisplayNameFor(model => model.AuthorName)
            </th>
            <th>
                @if (ViewBag.GenreSortParm == "Genre_desc")
                 {
                        @Html.ActionLink("▲", "Index", new { sortOrder = ViewBag.GenreSortParm, currentFilter=ViewBag.CurrentFilter}, new{@class = "actionLink"})<br />
                    }
                    else
                    {
                        @Html.ActionLink("▼", "Index", new { sortOrder = ViewBag.GenreSortParm, currentFilter=ViewBag.CurrentFilter }, new{@class = "actionLink"})<br />
                    }
               
                @Html.DisplayNameFor(model => model.GenreName)
            </th>
            
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) 
{

   


    @if ((item.IsDeleted == false && User.IsInRole("User")) || (User.IsInRole("Admin")) || (item.IsDeleted == false && !SignInManager.IsSignedIn(User)))
    {
        
    
        <tr class="table-info table-light" >
            <td style="width: 15%"> 
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td style="width: 20%">

                @Html.DisplayFor(modelItem => item.Description)
            </td>
            
            <td>
                <img style="width:150px;"  alt=""  src="@Html.DisplayFor(modelItem => item.ImagePath)">
         
            </td>
           
          
            <td style="width: 15%">
                
                @for (var i = 0; i < item.AuthorName.Count; i++)
                {
                  
                         @Html.ActionLink(item.AuthorName[i], "Details", "Authors", new {id=item.AutorsId[i]}, new Dictionary<string, object> { { "class", "btn btn-secondary" } } )<br />

                }
              
            </td>
            <td style="width: 15%">
                
                 @for (var i = 0; i < item.GenreName.Count; i++)
                {

                         @Html.ActionLink(item.GenreName[i], "Details", "Genres", new {id=item.GenresId[i]}, new Dictionary<string, object> {  { "class", "btn btn-secondary" } } )<br />

                }
           
            </td>
           
            <td>
                 @if (User.IsInRole("Admin") || item.UserName[0] == UserManager.GetUserName(User)) 
                        {
                             @for (var i = 0; i < item.UserName.Count; i++)
                            {
                    
                                        <a class="btn btn-secondary" asp-action="Edit" asp-route-id="@item.BooksID">Edit</a> 
                       
                            }
                        }
                
                
                 <a class="btn btn-secondary" asp-action="Details" asp-route-id="@item.BooksID" >View</a> 

                @*<a asp-action="Delete" asp-route-id="@item.BooksID">Delete</a>*@
            </td>

        </tr>
    }
    
}

    </tbody>

</table>

<br />

</body>
</html>

<style>
        .container
        {
                background-image: url("https://cdn.vectorstock.com/i/1000x1000/39/66/seamless-book-background-vector-21933966.webp");
                background-repeat:repeat;
                background-color: #cccccc;
        }
    .main-container
    {
        
        
    }
    .opacity-tabel
    {
        backdrop-filter: blur(8px);
        /*opacity: 0.8;*/
    }
    
    </style>