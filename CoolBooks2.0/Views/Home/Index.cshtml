@using Microsoft.AspNetCore.Identity
@using CoolBooks.Areas.Identity;
@model IEnumerable<CoolBooks.Models.BooksViewModel>
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Home Page";
}

<div class="grid-container">

    <div class = "TopBaner">
        <h1>Welcome to CoolBooks</h1>
       @*//<img src= "https://image.shutterstock.com/image-vector/poster-banner-design-library-bookstore-600w-1522828046.jpg" alt="index">*@
    </div>


 <div class = "BookOfTheWeek">
     @foreach (var item in Model) 
    {
        @if(item.IsBookOfTheWeek == true)
        {
    <div class ="BookOfTheWeekTitle"><h3>Book of the week!</h3></div>
     <div class ="BookOfTheWeekPicture">
         
        <table>
            <tr>
                <td> </td>
                </tr>
                <tr>
                <td>
                <img alt="" src="@Html.DisplayFor(modelItem => item.ImagePath)" >
                
                </td>
            </tr>
        </table>
        </div>

        <div class ="BookOfTheWeekInfo">
            <table>
                  
                        <ul style = "list-style-type:circle">
                        <li >@Html.DisplayFor(modelItem => item.Title)</li>
                        </ul>
                        <ul style = "list-style-type:circle">
                        <li>@Html.DisplayFor(modelItem => item.Description)</li>
                        </ul>
                        <ul style = "list-style-type:circle">
                        <li>@Html.DisplayFor(modelItem => item.Created)</li>
                        </ul>
                        <tr>
                        <td>
                            <ul style = "list-style-type:circle">
                                @for (var i = 0; i < item.AuthorName.Count; i++)
                                {
                                    <li>
                                        @Html.DisplayFor(modelItem => item.AuthorName[i])<br />
                                    </li>
                    
                                }
                            </ul>
                        </td>
                        </tr>
                        <tr>
                        <td>
                            <ul style = "list-style-type:circle">
                                @for (var i = 0; i < item.GenreName.Count; i++)
                                {
                                    <li>
                                        @Html.DisplayFor(modelItem => item.GenreName[i])<br />
                                    </li>
                                }
                            </ul>
                        </td>
                        <td>
                    </tr>

            </table> 
            <a class="btn btn-secondary" asp-controller="Books" asp-action="Details" asp-route-id="@item.BooksID">View</a>
            </div>
            
}
}
</div>

<!-- Slideshow container -->
<div class="slideshow-container">
  <!-- Full-width images with number and caption text -->

  <div class="mySlides">
      @foreach (var item in Model) 
    {
      @if(item.MostLikedBook == true)
        {
            <div class="text"><h4>Best Rating</h4></div>
            <div class="numbertext">1 / 3</div>
            <img src="@Html.DisplayFor(modelItem => item.ImagePath)" style="width:100%">
    <a class="btn btn-secondary" asp-controller="Books" asp-action="Details" asp-route-id="@item.BooksID">View</a>
        }
    }
  </div>

  <div class="mySlides">
      @foreach (var item in Model) 
    {
      @if(item.MostCommetedBook)
      {
          <div class="text"><h4>Most commented</h4></div>
        <div class="numbertext">2 / 3</div>
        <img src="@Html.DisplayFor(modelItem => item.ImagePath)" style="width:100%">
    <a class="btn btn-secondary" asp-controller="Books" asp-action="Details" asp-route-id="@item.BooksID">View</a>
      }
    }
  </div>

  <div class="mySlides">
      @foreach (var item in Model) 
    {
      @if(item.MostDislikedBook)
      {
          <div class="text"><h4>Worst Rating</h4></div>
        <div class="numbertext">3 / 3</div>
        <img src = "@Html.DisplayFor(modelItem => item.ImagePath)" alt="Index" style="width:100%">
        <a class="btn btn-secondary" asp-controller="Books" asp-action="Details" asp-route-id="@item.BooksID">View</a>
      }
    }
  </div>

  <!-- Next and previous buttons -->
  <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
  <a class="next" onclick="plusSlides(1)">&#10095;</a>

<br>

<!-- The dots/circles -->
<div style="text-align:center">
  <span class="dot" onclick="currentSlide(1)"></span>
  <span class="dot" onclick="currentSlide(2)"></span>
  <span class="dot" onclick="currentSlide(3)"></span>
</div>
</div>
<div class = "TopBooks">
  
    

    
        @foreach(var item in Model)
            {

             @if (ViewBag.Random.Contains(item.BooksID))
               {
                       @*<a class="btn btn-secondary" asp-controller="Books" asp-action="Details" asp-route-id="@item.BooksID">View</a>
                        <img src="@Html.DisplayFor(modelItem => item.ImagePath)" style="width:10%">*@
                        <table style="width:100%">
                          <tr>
                            <td><img src="@Html.DisplayFor(modelItem => item.ImagePath)" style="width:100%"></td>
                          </tr>
                          <tr>
                            <th><a class="btn btn-secondary" asp-controller="Books" asp-action="Details" asp-route-id="@item.BooksID">View</a></th>
                          </tr>

 
                        </table>

                }

            }         
        
</div>

</div>

@*</body>*@
@*</html>*@
<style>

.item1 { grid-area: TopBaner; }
.item2 { grid-area: BookOfTheWeek; }
.item3 { grid-area: slideshow-container; }
.item4 { grid-area: TopBooks; }


.grid-container {
  display: grid;
  grid-column-start: 1; grid-column-end: 6; 
  grid-template-areas: 
  'TopBaner'
  'BookOfTheWeek' 
  'slideshow-container'
  'TopBooks';
  padding: 10px;
 
 
  background-image: url("https://cdn.vectorstock.com/i/1000x1000/39/66/seamless-book-background-vector-21933966.webp");
  background-repeat:repeat;
  background-color: #cccccc;
}
.TopBaner
{
    grid-column-start: 1; grid-column-end: 6; 
    @*margin-left: 400px;*@
  backdrop-filter: blur(8px);
text-align: center;
margin-bottom:20px
}
.BookOfTheWeekTitle
{

    grid-area: BookOfTheWeekTitle;
    backdrop-filter: blur(8px);
    border-radius: 25px;
}
.BookOfTheWeekPicture
{
    grid-area: BookOfTheWeekPicture;
    backdrop-filter: blur(8px);
    border-radius: 25px;
}
.BookOfTheWeekInfo
{
    font-weight: 900;
    backdrop-filter: blur(2px);
    grid-area: BookOfTheWeekInfo;
    backdrop-filter: blur(8px);
    border-radius: 25px;
}


.BookOfTheWeek {
  display: grid;
  grid-column-start: 1; grid-column-end: 3; 
   grid-template-columns: 1fr 1fr 1fr;
   margin-left: 200px;
  grid-template-rows: 0.1fr 1fr;
  grid-template-areas:
  "BookOfTheWeekTitle BookOfTheWeekTitle " 
  "BookOfTheWeekPicture BookOfTheWeekInfo";
  
    /*background-color: #BBB8B2;*/
    background-color:;
    -webkit-backdrop-filter: blur(5px);
    overflow: hidden;
}

* {box-sizing:border-box}

.TopBooks {
    grid-column-start:1;
    grid-column-end:6;
    display: flex;
    flex-wrap: nowrap;
    justify-self:center;
    margin-top: 20px;
    text-align: left;
    backdrop-filter: blur(8px);
    border-radius: 25px;
}

@*.TopBooks > div {
    padding: 2%;
    text-align: left;
    
}*@



/* Slideshow container */
.slideshow-container {
 grid-column-start: 4; 
    grid-column-end: 6; 
  @*max-width: 1000px;
  position: relative;*@
 @* margin: auto;*@
 margin-right: 200px;
  backdrop-filter: blur(8px);
    border-radius: 25px;
}

/* Hide the images by default */
.mySlides {
  display: none;
}

/* Next & previous buttons */
.prev, .next {
  cursor: pointer;
  position: absolute;
  top: 50%;
  width: auto;
  margin-top: -22px;
  padding: 16px;
  color: white;
  font-weight: bold;
  font-size: 18px;
  transition: 0.6s ease;
  border-radius: 0 3px 3px 0;
  user-select: none;
}

/* Position the "next button" to the right */
.next {
  right: 0;
  border-radius: 3px 0 0 3px;
}

/* On hover, add a black background color with a little bit see-through */
.prev:hover, .next:hover {
  background-color: rgba(0,0,0,0.8);
}

/* Caption text */
.text {
  color: black;
  font-size: 15px;
  padding: 8px 12px;
  position: absolute;
  bottom: 8px;
  width: 100%;
  text-align: center;
}

/* Number text (1/3 etc) */
.numbertext {
  color: #f2f2f2;
  font-size: 12px;
  padding: 8px 12px;
  position: absolute;
  top: 0;
}

/* The dots/bullets/indicators */
.dot {
  cursor: pointer;
  height: 15px;
  width: 15px;
  margin: 0 2px;
  background-color: #bbb;
  border-radius: 50%;
  display: inline-block;
  transition: background-color 0.6s ease;
}

.active, .dot:hover {
  background-color: #717171;
}

@*/* Fading animation */
.fade {
  animation-name: fade;
  animation-duration: 1.5s;
}*@

@*@keyframes fade {
  from {opacity: .4}
  to {opacity: 1}
}*@
</style>
@*Java script*@
<script>
let slideIndex = 1;
showSlides(slideIndex);

// Next/previous controls
function plusSlides(n) {
  showSlides(slideIndex += n);
}

// Thumbnail image controls
function currentSlide(n) {
  showSlides(slideIndex = n);
}

function showSlides(n) {
  let i;
  let slides = document.getElementsByClassName("mySlides");
  let dots = document.getElementsByClassName("dot");
  if (n > slides.length) {slideIndex = 1}
  if (n < 1) {slideIndex = slides.length}
  for (i = 0; i < slides.length; i++) {
    slides[i].style.display = "none";
  }
  for (i = 0; i < dots.length; i++) {
    dots[i].className = dots[i].className.replace(" active", "");
  }
  slides[slideIndex-1].style.display = "block";
  dots[slideIndex-1].className += " active";
}
</script>